1. –ü—Ä–æ—Å—Ç–µ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º
x = 2

match x:
    case 1:
        print("–û–¥–∏–Ω")
    case 2:
        print("–î–≤–∞")
    case 3:
        print("–¢—Ä–∏")
    case _:
        print("–©–æ—Å—å —ñ–Ω—à–µ")


üîπ –¢—É—Ç match –ø—Ä–∞—Ü—é—î —è–∫ switch-case —É C/C++/Java.
üîπ case _: ‚Äî —Ü–µ "default" (—è–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ —Å–ø—ñ–≤–ø–∞–ª–æ).

2. –û–±‚Äô—î–¥–Ω–∞–Ω–Ω—è –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ (|)
color = "red"

match color:
    case "red" | "green" | "blue":
        print("–¶–µ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–ª—ñ—Ä")
    case _:
        print("–Ü–Ω—à–∏–π –∫–æ–ª—ñ—Ä")


üîπ –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –æ–¥—Ä–∞–∑—É –∫—ñ–ª—å–∫–∞ –∑–Ω–∞—á–µ–Ω—å –≤ –æ–¥–Ω–æ–º—É case.

3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ —É–º–æ–≤–æ—é (if, —Ç–∞–∫ –∑–≤–∞–Ω–∏–π guard)
number = 15

match number:
    case x if x > 0 and x < 10:
        print("–¶–∏—Ñ—Ä–∞ –≤—ñ–¥ 1 –¥–æ 9")
    case x if x >= 10:
        print("–ß–∏—Å–ª–æ 10 –∞–±–æ –±—ñ–ª—å—à–µ")
    case _:
        print("–ù—É–ª—å –∞–±–æ –≤—ñ–¥‚Äô—î–º–Ω–µ")


üîπ case x if ...: –¥–æ–∑–≤–æ–ª—è—î –¥–æ–¥–∞–≤–∞—Ç–∏ —É–º–æ–≤–∏, —è–∫ –≤ if.

4. –†–æ–±–æ—Ç–∞ –∑ –∫–æ–ª–µ–∫—Ü—ñ—è–º–∏ (—Å–ø–∏—Å–∫–∏, –∫–æ—Ä—Ç–µ–∂—ñ)
data = [1, 2, 3]

match data:
    case [1, 2, 3]:
        print("–°–ø–∏—Å–æ–∫ [1, 2, 3]")
    case [1, 2, _]:
        print("–°–ø–∏—Å–æ–∫, —â–æ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ [1, 2]")
    case [x, y, z]:
        print(f"–¢—Ä–∏ –µ–ª–µ–º–µ–Ω—Ç–∏: {x}, {y}, {z}")
    case _:
        print("–©–æ—Å—å —ñ–Ω—à–µ")


üîπ –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–ø–∏—Å–∫—É —Ç–∞ –Ω–∞–≤—ñ—Ç—å "–≤–∏—Ç—è–≥—É–≤–∞—Ç–∏" –µ–ª–µ–º–µ–Ω—Ç–∏.

5. –†–æ–±–æ—Ç–∞ –∑—ñ —Å–ª–æ–≤–Ω–∏–∫–∞–º–∏
person = {"name": "–†–æ–º–∞–Ω", "age": 20}

match person:
    case {"name": name, "age": age}:
        print(f"–Ü–º'—è: {name}, –í—ñ–∫: {age}")
    case {"name": name}:
        print(f"–Ü–º'—è: {name}, –≤—ñ–∫ –Ω–µ–≤—ñ–¥–æ–º–∏–π")
    case _:
        print("–ù–µ–≤—ñ–¥–æ–º—ñ –¥–∞–Ω—ñ")


üîπ –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∫–ª—é—á—ñ —Ç–∞ –æ–¥—Ä–∞–∑—É –ø—Ä–∏–≤–ª–∞—Å–Ω—é–≤–∞—Ç–∏ —ó—Ö —É –∑–º—ñ–Ω–Ω—ñ.

6. –†–æ–±–æ—Ç–∞ –∑ –∫–ª–∞—Å–∞–º–∏ (pattern matching –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º)
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

p = Point(1, 2)

match p:
    case Point(x=0, y=0):
        print("–¶–µ –ø–æ—á–∞—Ç–æ–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
    case Point(x, y):
        print(f"–¢–æ—á–∫–∞ –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: {x}, {y}")
    case _:
        print("–ù–µ–≤—ñ–¥–æ–º–∏–π –æ–±'—î–∫—Ç")


üîπ –¢—É—Ç match –º–æ–∂–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞—Ç–∏ –æ–±‚Äô—î–∫—Ç–∏ —ñ —ó—Ö–Ω—ñ –∞—Ç—Ä–∏–±—É—Ç–∏.

7. –í–∫–ª–∞–¥–µ–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
data = {"user": {"name": "–†–æ–º–∞–Ω", "age": 20}}

match data:
    case {"user": {"name": name, "age": age}}:
        print(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {name}, {age} —Ä–æ–∫—ñ–≤")
    case _:
        print("–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ")


üîπ match –∑—Ä—É—á–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ JSON, API-–≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π —Ç–æ—â–æ.

‚úÖ –û—Ç–∂–µ, match-case –≤ Python –º–æ–∂–µ:

–∑–∞–º—ñ–Ω–∏—Ç–∏ if-elif-else –¥–ª—è –ø—Ä–æ—Å—Ç–∏—Ö –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫,

–ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Å–∫–ª–∞–¥–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ (—Å–ø–∏—Å–∫–∏, —Å–ª–æ–≤–Ω–∏–∫–∏, –æ–±‚Äô—î–∫—Ç–∏),

–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —É–º–æ–≤–∞–º–∏ (if),

–∑—Ä—É—á–Ω–æ —Ä–æ–∑–±–∏—Ä–∞—Ç–∏ JSON —á–∏ –¥–∞–Ω—ñ –∑ API.

–•–æ—á–µ—à, —è —Å–∫–ª–∞–¥—É –¥–ª—è —Ç–µ–±–µ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è "if-elif-else" vs "match-case" –Ω–∞ –æ–¥–Ω–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ, —â–æ–± –±—É–ª–æ –Ω–∞–æ—á–Ω–æ, –¥–µ match —Ä–µ–∞–ª—å–Ω–æ –∑—Ä—É—á–Ω—ñ—à–∏–π?

–í–∏ —Å–∫–∞–∑–∞–ª–∏: